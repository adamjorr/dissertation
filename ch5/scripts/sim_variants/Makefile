SHELL = bash
REF = ../sampled_contigs.fa.gz
REFDICT = $(basename $(basename $(REF))).dict
TRUESNPS = ../simug.refseq2simseq.SNP.vcf.gz
TARGETVCFS = ngm.vcf.gz ngm.recal.vcf.gz kbbq-ngm.recal.vcf.gz initial-calls.recal.vcf.gz
RTGTARGETS = $(addsuffix .d/calls.vcf.gz,$(TARGETVCFS))
SUMMARYTARGETS = $(addsuffix .summary.txt,$(TARGETVCFS))
QUALROCS = $(addsuffix _QUAL_ROC/snp_roc.tsv.gz,$(TARGETVCFS))
GQROCS = $(addsuffix _GQ_ROC/snp_roc.tsv.gz,$(TARGETVCFS))
QUALROCTARGETS = $(addsuffix _QUAL.snp_roc.tsv.gz,$(TARGETVCFS))
GQROCTARGETS = $(addsuffix _GQ.snp_roc.tsv.gz,$(TARGETVCFS))
HAPDIPJS = $(HOME)/bin/hapdip/hapdip.js

.PRECIOUS:

.SECONDARY:

.PHONY: variants summaries rocs

.DEFAULT: summaries

#index helpers
%.fa.gz.fai: %.fa.gz
	samtools faidx $<

%.bam.bai: %.bam
	samtools index $<

%.vcf.gz: %.vcf
	bgzip -c $< > $@

%.vcf.gz.tbi: %.vcf.gz
	bcftools index -t $<

%.dict: %.fa
	gatk CreateSequenceDictionary -R $<

%.dict: %.fa.gz
	gatk CreateSequenceDictionary -R $<

%.fa.gz.sdf: %.fa.gz
	rtg format -o $@ $<


#theta 0.025

#get initial calls with HC and use them to recalibrate
$(TARGETVCFS): %.vcf.gz : ../%.bam $(REF) ../%.bam.bai $(REFDICT)
	gatk HaplotypeCaller -R $(word 2, $^) -I $< --native-pair-hmm-threads 8 -O $@ --heterozygosity 0.025

variants: $(TARGETVCFS)

sim_sample_snps.vcf.gz: $(TRUESNPS)
	bcftools view $< | \
	sed '/^#[^#]/s/$$/\tFORMAT\tsim/' | \
	sed '/^#/!s/$$/\tGT\t0|1/' | \
	bgzip -c > $@

#evaluate with rtg
$(RTGTARGETS): %.vcf.gz.d/calls.vcf.gz: %.vcf.gz sim_sample_snps.vcf.gz $(REF).sdf sim_sample_snps.vcf.gz.tbi
	rm -rf $(dir $@) && rtg vcfeval -b $(word 2, $^) -c $< -o $(dir $@) -t $(word 3, $^) --output-mode=annotate -T 8

#we don't have any non-confident regions; use the whole genome
conf.bed: $(REF).fai
	cat $< | awk -v OFS='\t' '{print $$1, 0, $$2}' > $@

%.d/hapdip_summary.txt: %.d/calls.vcf.gz conf.bed
	k8 $(HAPDIPJS) rtgeval $(word 2, $^) $(dir $@) > $@

$(SUMMARYTARGETS): %.summary.txt: %.d/hapdip_summary.txt
	cp $< $@

summaries: $(SUMMARYTARGETS)

#QUALROCS = $(addsuffix _QUAL_ROC/snp_roc.tsv.gz,$(TARGETVCFS))
$(QUALROCS): %.vcf.gz_QUAL_ROC/snp_roc.tsv.gz: %.vcf.gz sim_sample_snps.vcf.gz $(REF).sdf sim_sample_snps.vcf.gz.tbi
	rm -rf $(dir $@) && rtg vcfeval -b $(word 2, $^) -c $< -t $(word 3, $^) --output-mode=roc-only --vcf-score-field=QUAL -T 4 -o $(dir $@)

$(QUALROCTARGETS): %.vcf.gz_QUAL.snp_roc.tsv.gz: %.vcf.gz_QUAL_ROC/snp_roc.tsv.gz
	cp $< $@

$(GQROCS): %.vcf.gz_GQ_ROC/snp_roc.tsv.gz: %.vcf.gz sim_sample_snps.vcf.gz $(REF).sdf sim_sample_snps.vcf.gz.tbi
	rm -rf $(dir $@) && rtg vcfeval -b $(word 2, $^) -c $< -t $(word 3, $^) --output-mode=roc-only --vcf-score-field=GQ -T 4 -o $(dir $@)

$(GQROCTARGETS): %.vcf.gz_GQ.snp_roc.tsv.gz: %.vcf.gz_GQ_ROC/snp_roc.tsv.gz
	cp $< $@

rocs: $(QUALROCTARGETS) $(GQROCTARGETS)
